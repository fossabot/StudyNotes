<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- 1.无参构造器创建 -->
    <bean id="user" class="app02.User"/>

    <!-- 2.有参构造器创建 -->
    <bean id="user2" class="app02.User">
        <constructor-arg index="0" type="java.lang.Integer" value="100"/>
        <constructor-arg index="1" type="java.lang.String" value="haijiao"/>
    </bean>

    <!-- 定义一个字符串，值为chenyang，String str = new String("chenyang); -->
    <bean id="str" class="java.lang.String">
        <constructor-arg value="chenyang"/>
    </bean>

    <bean id="iid" class="java.lang.Integer">
        <constructor-arg value="101"/>
    </bean>

    <!-- 让一个参数为一个bean -->
    <!--<bean id="user3" class="app02.User">
        <constructor-arg index="0" type="java.lang.Integer" value="100"/>
        <constructor-arg index="1" type="java.lang.String" ref="str"/>
    </bean>-->

    <!-- 让两个参数都为bean -->
    <bean id="user3" class="app02.User">
        <constructor-arg index="0" type="java.lang.Integer" ref="iid"/>
        <constructor-arg index="1" type="java.lang.String" ref="str"/>
    </bean>

    <!-- 3.工厂类创建对象 -->
    <!-- 3.1 工厂类：实例方法 -->
    <bean id="factory" class="app02.ObjectFactory"/>
    <!-- 在创建User对象，调用工厂中的实例方法 -->
    <bean id="user4" class="app02.User" factory-bean="factory" factory-method="getInstance"/>

    <!-- 3.2 工厂类：静态方法 -->
    <bean id="user5" class="app02.ObjectFactory" factory-method="getStaticInstance"/>
</beans>